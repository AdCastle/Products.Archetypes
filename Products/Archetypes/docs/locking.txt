This is the basic test and documentation file about the locking feature of archetypes based content types.
We want to lock content via the web interface to avoid concurent access to a document for example.

Let's first create a BaseObject (this might be a document, a folder, a link...)

   >>> from Products.Archetypes.BaseContent import BaseContent
   >>> baseObj = BaseContent('id')

Let's lock this Object.
For this we did a small adapter which will take any kind of Archetypes based content and
lock it. By locking we mean that the objet will be WebDav locked and that no other user that
the one who hold the lock will be able to change the object.

To lock an Object it's really easy. First take the ILock interface
   >>> from Products.Archetypes.interfaces import ILock

And let's adapt our BaseObject thanks to this ILock:
   >>> ttwLockAdapter = ILock(baseObj)

It should be a TTWLock adapter
   >>> type(ttwLockAdapter)
   <class 'Products.Archetypes.adapters.locking.TTWLock'>
   >>> ILock.providedBy(ttwLockAdapter)
   True

Let's check first that the object isn't locked yet.
   >>> ttwLockAdapter.isLock()
   False

Great it's not locked! Now let's lock it
   >>> ttwLockAdapter.lock()

It should be locked then...
   >>> ttwLockAdapter.isLock()
   True

What if we lock it again ?
   >>> ttwLockAdapter.lock()

Nothing happen...
And it's still lock:

   >>> ttwLockAdapter.isLock()
   True

We have finished working on it. Now let's unlock it:
   >>> ttwLockAdapter.unlock()

Is it still locked?
   >>> ttwLockAdapter.isLock()
   False
