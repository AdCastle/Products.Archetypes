<html xmlns="http://www.w3.org/1999/xhtml"
      xml:lang="en-US"
      lang="en-US"
      xmlns:tal="http://xml.zope.org/namespaces/tal"
      xmlns:metal="http://xml.zope.org/namespaces/metal"
      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
      i18n:domain="plone">
  <head><title></title></head>
  <body>

    <!-- Base Field Widgets -->
    <metal:base_view_macro define-macro="base_view"
                           tal:define="use_label use_label|python:1;
               widget_view python:field.render(here, mode=mode, use_label=use_label);
                                       field_macros here/widgets/field/macros;
                                       label_macro view_macros/label|label_macro|field_macros/label;
                                       data_macro view_macros/data|data_macro|field_macros/data;">
      <tal:if_perm condition="python:'view' in widget.modes and 'r' in field.mode and field.checkPermission('r', here)">
        <tal:if_use_label condition="use_label|nothing">
          <metal:use_label use-macro="label_macro" />
        </tal:if_use_label>
      </tal:if_perm>
      <metal:use_data use-macro="data_macro|default" />
    </metal:base_view_macro>

    <metal:label_macro define-macro="label">
      <label tal:content="python:widget.Label(here) + ':'">Field</label>
      <span tal:condition="field/workflowable|nothing"
            tal:omit-tag="">
        (
        <a href="#"
           tal:define="wf_tool here/portal_workflow;
                       obj python:accessor();
                       review_state python:wf_tool.getInfoFor(obj, 'review_state', '')"
           tal:attributes="href string:${obj/absolute_url}/content_status_history;
                           class python:test(review_state, review_state, 'private')"
           tal:content="review_state">
          review_state
        </a>
        )
      </span>
      <br />
    </metal:label_macro>

    <metal:data_macro define-macro="data">
      <metal:block use-macro="widget_view" />
    </metal:data_macro>

    <div metal:define-macro="view" class="field">
      <metal:use_base_view use-macro="here/widgets/field/macros/base_view" />
    </div>

    <metal:define define-macro="edit"
                  tal:define="visState python: widget.isVisible(here, mode);
                              edit_accessor python:field.getEditAccessor(here);
                              value python:widget.populate and edit_accessor and edit_accessor() or '';
                              value python:widget.postback and request.get(fieldName, value) or value;
                              error_id python:errors.get(fieldName)">
      <tal:condition condition="python: visState == 'visible'">
        <div class="field"
             tal:condition="python: 'edit' in widget.modes and 'w' in field.mode and field.checkPermission('w',here)"
             tal:attributes="class python:test(error_id, 'field error', 'field')">
          <label i18n:translate=""
                 tal:content="python:widget.Label(here)"
                 tal:attributes="for python:field.getName()"
                 tal:condition="widget/show_label">
          </label>
          <span class="fieldRequired"
                tal:condition="python:field.required and widget.show_required"
                title="Required">
            (Required)
          </span>
          <div class="formHelp"
               tal:content="structure python:widget.Description(here)"
               tal:attributes="id string:${fieldName}_help"
               tal:condition="widget/show_description"
               i18n:translate="">
            Help
          </div>

          <div class="formHelp"
            tal:condition="widget/show_help">
            <span tal:condition="field/workflowable|nothing"
                  tal:omit-tag="">
              State:
              <a href="#"
                 tal:define="wf_tool here/portal_workflow;
                             obj python:accessor();
                             review_state python:wf_tool.getInfoFor(obj, 'review_state', '')"
                 tal:attributes="href string:${obj/absolute_url}/content_status_history;
                                 class python:test(review_state, review_state, 'private')"
                 tal:content="review_state">
                review_state
              </a>
            </span>
            <span tal:condition="python:getattr(widget, 'show_content_type', 0) and hasattr(field, 'getContentType') and field.getContentType(here)"
                  tal:omit-tag="">
              Content Type: <span tal:replace="python:field.getContentType(here)" />
            </span>
          </div>
          <span tal:omit-tag=""
                tal:define="error python:errors.get(fieldName)">
            <div tal:replace="error_id">Validation Error</div>
            <div metal:define-slot="widget_body"></div>
          </span>
        </div>
      </tal:condition>

      <tal:condition condition="python: visState == 'hidden'">
        <metal:use use-macro="here/widgets/field/macros/hidden"/>
      </tal:condition>
    </metal:define>

    <metal:hidden_macro define-macro="hidden">
      <input type="hidden"
             name=""
             value=""
             tabindex="#"
             tal:attributes="name fieldName;
                             value value;
                             tabindex tabindex/next;" />
    </metal:hidden_macro>

  </body>
</html>
