<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:tal="http://xml.zope.org/namespaces/tal"
      xmlns:metal="http://xml.zope.org/namespaces/metal"
      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
      i18n:domain="plone">

  <head><title></title></head>

  <body>

    <!-- TextArea Widgets -->

    <div class="field" metal:define-macro="view">
      <metal:block define-slot="widget_label">
      </metal:block>
      <metal:block use-macro="here/widgets/field/macros/view">
	<metal:block fill-slot="widget_view">
	  <span tal:replace="structure accessor"/>
	</metal:block>
      </metal:block>
    </div>

    <metal:define define-macro="area_edit">
      <textarea tabindex="#"
		tal:attributes="name fieldName;
		id fieldName;
		cols widget/cols;
		rows widget/rows;
		tabindex tabindex/next;"
		tal:define="base python: hasattr(value, 'isUnit');
		binary python: base and value.isBinary() or here.isBinary(fieldName);
		content python: (base == 1) and value.getRaw() or value ;
		content python: (binary == 0) and content or '';"
		tal:content="content"/>
    </metal:define>

    <metal:define define-macro="area_format">
      <tal:define define="contentType python:request.get('%s_text_format' % fieldName, here.getContentType(fieldName));
		  mimetypes python: [t for t in getattr(field, 'allowable_content_types', ()) if t.startswith('text/')];"
		  condition="python: len(mimetypes) > 1">
	<div class="label"
	i18n:translate="label_format">Text Format</div>
	<select tal:attributes="
		id string:${fieldName}_text_format;
		name string:${fieldName}_text_format;
		tabindex tabindex/next;">
	  <option selected="selected" value=""
		  tal:attributes="value contentType">
	    (no change)
	  </option>
	  <option tal:repeat="item mimetypes"
		  tal:attributes="value item"
		  tal:content="item" />
	</select>
      </tal:define>
    </metal:define>

    <metal:define define-macro="edit">
      <metal:use use-macro="here/widgets/field/macros/edit">
	<metal:fill fill-slot="widget_body" >
	  <metal:block metal:use-macro="here/widgets/textarea/macros/area_edit"  />
	  <metal:block metal:use-macro="here/widgets/textarea/macros/area_format"/>
	</metal:fill>
      </metal:use>
    </metal:define>

    <div metal:define-macro="search">
      <div metal:use-macro="here/widgets/textarea/macros/edit">
      </div>
    </div>

  </body>

</html>

