
/* Base kss resource for Archetypes */

.blurrable:blur {
    action-server:                kssValidateField;
    kssValidateField-fieldname:   kssAttr('atfieldname', true);
    kssValidateField-value:       currentFormVar();
}

input[name="form_submit"]:click {
    evt-click-preventdefault:     true;
    action-server:                kssValidateForm;
    kssValidateForm-data:         currentForm();
}

.inlineEditable:click {
    evt-click-allowbubbling: true;
    action-server: replaceField;
    replaceField-fieldname: kssAttr('atfieldname', true);
    replaceField-macro: kssAttr('macro', true);
    replaceField-templateId: kssAttr('templateId', true);
    action-client: log;
}

.inlineForm input[name=kss-save]:click {
    evt-click-preventdefault: true;
    action-server: saveField;
    saveField-fieldname: kssAttr('atfieldname', true);
    saveField-value: currentForm();
    saveField-macro: kssAttr('macro', true);
    saveField-templateId: kssAttr('templateId', true);
}

.inlineForm .blurrable:blur {
    action-server: saveField;
    saveField-fieldname: kssAttr('atfieldname', true);
    saveField-value: currentForm();
    saveField-macro: kssAttr('macro', true);
    saveField-templateId: kssAttr('templateId', true);
    action-cancel: kssValidateField;
}

.inlineForm input[name=kss-cancel]:click {
    evt-click-preventdefault: true;
    action-server: replaceWithView;
    replaceWithView-fieldname: kssAttr('atfieldname', true);
    replaceWithView-macro: kssAttr('macro', true);
    replaceWithView-templateId: kssAttr('templateId', true);
}

.inlineForm .blurrable:keypress {
    evt-keypress-keycodes: '27';
    action-server: replaceWithView;
    replaceWithView-fieldname: kssAttr('atfieldname', true);
    replaceWithView-macro: kssAttr('macro', true);
    replaceWithView-templateId: kssAttr('templateId', true);
}

